# See https://wiki.hyprland.org/Configuring/Keywords/
$mainMod = SUPER # Sets "Windows" key as main modifier
$terminal = foot
$fileManager = $terminal -e yazi
$musicPlayer = $terminal -e rmpc
$browser = firefox

### CHORDS ###

# This submap mimics the behavior of a "leader key", also known as a key chord.
# In this case, the leader is SUPER+Space

## Launcher submap
# NOTE: don't forget to call this var when calling exec or the keybinds will still be in the submap!
$reset = hyprctl dispatch submap reset
$timeout = 1.35
# 1-sec timeout for submap
bind = $mainMod, Return, exec, uwsm app -- sleep $timeout && $reset
bind = $mainMod, Return, submap, menus
submap = menus
bind = , W, exec, uwsm app -- $reset && waypaper
bind = , S, exec, uwsm app -- $reset && steam
bind = , A, exec, uwsm app -- $reset && pkill -x rofi || ~/.local/share/rofi/audio-select.sh
bind = , M, exec, uwsm app -- $reset && $musicPlayer
# Exit submap on any other key
bind = , catchall, submap, reset
# exit submap
submap = reset

## Screenshot submap
bind = $mainMod, S, exec, uwsm app -- sleep $timeout && $reset
bind = $mainMod, S, submap, screenshots
submap = screenshots
# Window
bind = , W, exec, uwsm app -- $reset && hyprshot -z -m window
bind = $mainMod, W, exec, uwsm app -- $reset && hyprshot -z -s -o /tmp/ocr -m window -- ocr_image.sh
# Region
bind = , R, exec, uwsm app -- $reset && hyprshot -z -m region
bind = $mainMod, R, exec, uwsm app -- $reset && hyprshot -z -s -o /tmp/ocr -m region -- ocr_image.sh
# Monitor
bind = , O, exec, uwsm app -- $reset && hyprshot -z -m output
bind = $mainMod, O, exec, uwsm app -- $reset && hyprshot -z -s -o /tmp/ocr -m output -- ocr_image.sh
bind = , catchall, submap, reset
submap = reset

## Rotation Submap
bind = $mainMod ALT, R, exec, uwsm app -- sleep $timeout && $reset
bind = $mainMod ALT, R, submap, rotation
submap = rotation
# there are only 8 transforms, although you probably don't want to use anything higher
# than 3
bind = , R, exec, uwsm app -- $reset && rotate_monitor.sh
bind = , 0, exec, uwsm app -- $reset && rotate_monitor.sh 0
bind = , 1, exec, uwsm app -- $reset && rotate_monitor.sh 1
bind = , 2, exec, uwsm app -- $reset && rotate_monitor.sh 2
bind = , 3, exec, uwsm app -- $reset && rotate_monitor.sh 3
bind = , 4, exec, uwsm app -- $reset && rotate_monitor.sh 4
bind = , 5, exec, uwsm app -- $reset && rotate_monitor.sh 5
bind = , 6, exec, uwsm app -- $reset && rotate_monitor.sh 6
bind = , 7, exec, uwsm app -- $reset && rotate_monitor.sh 7
bind = , escape, submap, reset
submap = reset

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, B, exec, uwsm app -- $browser
# NOTE: Firefox specific
bind = $mainMod_SHIFT, B, exec, uwsm app -- $browser --private-window
bind = $mainMod, Y, exec, uwsm app -- $fileManager
bind = $mainMod, F, fullscreen
# don't use "exit" dispatcher with uwsm
bind = $mainMod, M, exec, uwsm stop
bind = $mainMod, O, exec, uwsm app -- obsidian
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, Q, killactive, # closes (not kills) the active window
bind = $mainMod, R, togglesplit, # dwindle
bind = $mainMod, T, exec, uwsm app -- $terminal
bind = $mainMod, V, togglefloating,
bind = $mainMod, W, exec, uwsm app -- waypaper --random
bind = $mainMod, Space, exec, pkill -x rofi || rofi -show drun --run-command "uwsm app -- {cmd}" -config ~/.config/rofi/blur-style.rasi


# Move focus with mainMod + Vim keys
bind = $mainMod, H, movefocus, l
bind = $mainMod, J, movefocus, d
bind = $mainMod, K, movefocus, u
bind = $mainMod, L, movefocus, r

# Move windows around with mainMod + Shift + Vim keys
bind = $mainMod SHIFT, H, movewindow, l
bind = $mainMod SHIFT, J, movewindow, d
bind = $mainMod SHIFT, K, movewindow, u
bind = $mainMod SHIFT, L, movewindow, r

bind = $mainMod ALT, L, exec, lock_screen.sh

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10
bind = $mainMod SHIFT, C, exec, uwsm app -- hyprpicker -a -f hex

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Mimics the Task Manager bind from Windows
bind = CTRL_SHIFT, Escape, exec, uwsm app -- $terminal -e btop

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, uwsm app -- wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindel = ,XF86AudioLowerVolume, exec, uwsm app -- wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindel = ,XF86AudioMute, exec, uwsm app -- wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindel = ,XF86AudioMicMute, exec, uwsm app -- wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, uwsm app -- brightnessctl s 10%+
bindel = ,XF86MonBrightnessDown, exec, uwsm app -- brightnessctl s 10%-

# Requires playerctl
bindl = , XF86AudioNext, exec, uwsm app -- playerctl next
bindl = , XF86AudioPause, exec, uwsm app -- playerctl play-pause
bindl = , XF86AudioPlay, exec, uwsm app -- playerctl play-pause
bindl = , XF86AudioPrev, exec, uwsm app -- playerctl previous
