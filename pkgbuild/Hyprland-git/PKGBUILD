# Maintainer: Your Name <youremail@domain.com>
_pkgname=Hyprland
pkgname="${_pkgname}-git"
pkgver=0.48.0.r73.g99ab3e1
pkgrel=1
pkgdesc="Hyprland provides the latest Wayland features, dynamic tiling, all the eyecandy, powerful plugins and much more, while still being lightweight and responsive"
arch=(x86_64)
url="https://hyprland.org/"
license=('BSD-3')
depends=(
  aquamarine-git
  blueman
  cairo
  cpio
  egl-wayland
  firefox
  foot
  git
  hyprcursor-git
  hyprgraphics-git
  hypridle-git
  hyprland-qtutils-git
  hyprlang-git
  hyprlock-git
  hyprpolkitagent-git
  hyprshot-git
  hyprutils-git
  kitty
  libdisplay-info
  libinput
  libliftoff
  libx11
  libxcb
  libxcomposite
  libxcursor
  libxfixes
  libxkbcommon
  libxrender
  mako
  mpvpaper
  nwg-look
  obsidian
  pango
  perl-image-exiftool
  pixman
  python-pywal16
  qt5-wayland
  qt6-wayland
  re2
  rofi-wayland
  sddm
  seatd
  speech-dispatcher
  sway-audio-idle-inhibit-git
  swww-git
  tesseract
  tomlplusplus
  ttf-font-awesome
  udiskie
  upscayl-ncnn
  uwsm
  waybar
  wayland-protocols
  waypaper
  wl-clipboard
  xcb-proto
  xcb-util
  xcb-util-errors
  xcb-util-keysyms
  xcb-util-wm
  xdg-desktop-portal-gtk-git
  xdg-desktop-portal-hyprland-git
  xorg-xwayland
  yazi
)
makedepends=(
  cmake
  hyprwayland-scanner-git
  gcc
  git
  glaze
  meson
  ninja
)
provides=("$_pkgname=${pkgver/\.r*/}" "wayland-compositor")
conflicts=(hyprland Hyprland hyprland-git)
source=(
  "git+https://github.com/hyprwm/$_pkgname.git"
  "git+https://github.com/hyprwm/hyprland-protocols"
  "git+https://github.com/canihavesomecoffee/udis86"
  "git+https://github.com/wolfpld/tracy"
)
noextract=()
sha256sums=('SKIP' 'SKIP' 'SKIP' 'SKIP')

pkgver() {
  cd "$srcdir/$_pkgname" || exit 1

  # Git, tags available
  printf "%s" "$(git describe --long --tags --abbrev=7 | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g')"
}

prepare() {
  cd "$srcdir/$_pkgname" || exit 1

  git config submodule.subprojects/hyprland-protocols.url "file://$srcdir/hyprland-protocols"
  git config submodule.subprojects/udis86.url "file://$srcdir/udis86"
  git config submodule.subprojects/tracy.url "file://$srcdir/tracy"

  git -c protocol.file.allow=always submodule update
}

build() {
  cd "$srcdir/$_pkgname" || exit 1
  make all
}

package() {
  cd "$srcdir/$_pkgname" || exit 1
  make DESTDIR="$pkgdir/" install
}
